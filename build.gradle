apply plugin: 'docker'

buildscript {

    ext {
        springBootVersion = '1.4.3.RELEASE'
    }

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'se.transmode.gradle:gradle-docker:1.2'
        classpath "io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE"
     }

}




allprojects {

    repositories {
        mavenCentral()
        jcenter()
    }

    apply plugin: "io.spring.dependency-management"

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.cloud:spring-cloud-config:1.2.2.RELEASE'
        }
    }

    task wrapper(type: Wrapper) {
        gradleVersion = '2.9'
    }

    apply plugin: 'idea'

    //group of docker images
    group = 'kolov'

}

//task buildZookeeperInitializerDocker(type: Docker) {
//    push = false
//    applicationName = 'zoocurri'
//    dockerfile = file('src/main/docker/zookeeper-initializer/Dockerfile')
//    doFirst {
//        copy {
//            from 'secrets/init-zookeeper-secrets.sh'
//            into stageDir
//        }
//        copy {
//            from 'src/main/docker/zookeeper-initializer/init-zookeeper-env.sh'
//            into stageDir
//        }
//        // concatenates thos file to init-zookeeper.sh
//        def output = new File("$stageDir/init-zookeeper.sh")
//        files("$stageDir/init-zookeeper-secrets.sh",
//                "$stageDir/init-zookeeper-env.sh").each {
//            f -> output << f.text
//        }
//    }
//}

task buildImages() {
    dependsOn ':app:buildDocker',
            ':service-docs:buildDocker',
            'config-server:buildDocker'
}
