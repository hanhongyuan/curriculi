server:
  port: 8080

zuul:
  routes:
    docs:
      path: /docs/**
      serviceId: service-docs

oauth2:
  google:
    client:
#      clientId: from ConfigServer
#      clientSecret: from ConfigServer
      accessTokenUri: https://www.googleapis.com/oauth2/v4/token
      userAuthorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      clientAuthenticationScheme: form
      scope:
        - openid
        - email
        - profile
    resource:
      userInfoUri: https://www.googleapis.com/oauth2/v3/userinfo
      preferTokenInfo: true
  facebook:
    client:
#      clientId: ${facebook.clientId} from ConfigServer
#      clientSecret: ${facebook.secret} from ConfigServer
      accessTokenUri: https://graph.facebook.com/oauth/access_token
      userAuthorizationUri: https://www.facebook.com/dialog/oauth
      tokenName: oauth_token
      authenticationScheme: query
      clientAuthenticationScheme: form
    resource:
      userInfoUri: https://graph.facebook.com/me

# Mongo database URI. When set, host and port are ignored.
spring:
  data:
    mongodb:
      uri: mongodb://127.0.0.1:27017/curri
      database: curri
      name: curriculi

# becaus of http://stackoverflow.com/questions/27249078/spring-boot-gives-templateinputexception-error-resolving-template-when-runnin
  thymeleaf:
      prefix: classpath:/templates



eureka:
  client:
    serviceUrl:
      defaultZone: "${EUREKA_HOST:http://localhost:8761/eureka/}"
    registerWithEureka: false
    fetchRegistry: true
  instance:
      preferIpAddress: true
  server:
    waitTimeInMsWhenSyncEmpty: 0
